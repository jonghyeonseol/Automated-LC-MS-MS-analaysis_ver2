version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ganglioside_postgres
    environment:
      POSTGRES_DB: ganglioside_prod
      POSTGRES_USER: ganglioside_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ganglioside_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ganglioside_user -d ganglioside_prod"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ganglioside_network

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    container_name: ganglioside_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ganglioside_network

  # Django Application (Gunicorn)
  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ganglioside_django
    command: gunicorn --config gunicorn.conf.py config.wsgi:application
    environment:
      DJANGO_SETTINGS_MODULE: config.settings.production
      DATABASE_URL: postgresql://ganglioside_user:${POSTGRES_PASSWORD:-ganglioside_password}@postgres:5432/ganglioside_prod
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ganglioside_network

  # Daphne WebSocket Server
  daphne:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ganglioside_daphne
    command: daphne -b 0.0.0.0 -p 8001 config.asgi:application
    environment:
      DJANGO_SETTINGS_MODULE: config.settings.production
      DATABASE_URL: postgresql://ganglioside_user:${POSTGRES_PASSWORD:-ganglioside_password}@postgres:5432/ganglioside_prod
      REDIS_URL: redis://redis:6379/0
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ganglioside_network

  # Celery Worker
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: ganglioside_celery_worker
    command: celery -A config worker --loglevel=info --concurrency=4
    environment:
      DJANGO_SETTINGS_MODULE: config.settings.production
      DATABASE_URL: postgresql://ganglioside_user:${POSTGRES_PASSWORD:-ganglioside_password}@postgres:5432/ganglioside_prod
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - media_volume:/app/media
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ganglioside_network

  # Celery Beat (Scheduler)
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: ganglioside_celery_beat
    command: celery -A config beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      DJANGO_SETTINGS_MODULE: config.settings.production
      DATABASE_URL: postgresql://ganglioside_user:${POSTGRES_PASSWORD:-ganglioside_password}@postgres:5432/ganglioside_prod
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ganglioside_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ganglioside_nginx
    volumes:
      - ./deployment/nginx/docker-nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/static:ro
      - media_volume:/app/media:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - django
      - daphne
    networks:
      - ganglioside_network

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  ganglioside_network:
    driver: bridge
